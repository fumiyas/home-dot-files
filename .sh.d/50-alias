#!/bin/bash
## Aliases and functions definition for bash, zsh
## Author: SATOH Fumiyasu

## Generic
## ======================================================================

alias cd.='cd $(pwd)'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'
alias .......='cd ../../../../../..'
mkcd() {
  mkdir "$@" || return $?
  while [ $# -gt 0 ]; do
    if [ -d "$1" ]; then
      cd "$1" || return $?
    fi
    shift
  done
}

alias nohistory='set +o sharehistory; SAVEHIST='

## Enable alias expansion on sudo command-line
alias sudo='sudo '
alias xargs='xargs '

alias lang-c='env LC_ALL=C LANG=C'
alias nkf-x='nkf -x -m0'

alias c='printf "\017\033c"; stty sane; reset'
tsize() {
  local cols lines

  if [[ $# -eq 0 ]]; then
    cols=100
    lines=64
  else
    if [[ -n ${1#-} ]]; then
      cols="$1"
    else
	cols=$(tput cols)
    fi
    if [[ -n ${2#-} ]]; then
      lines="$2"
    else
	lines=$(tput lines)
    fi
  fi

  printf '\e[8;%d;%dt' "$lines" "$cols"
}
ttitle()
{
  printf "\e]2;%s\a" "$*"
}

a2image() {
  if [ -z "$1" ]; then
    echo "Usage: a2image FILENAME.EXT"
    return
  fi
  convert label:@- "$1"
}

base64url() {
  base64 "$@" |sed 's/+/-/g;s/\//_/g'
}
base64url-decode() {
  sed 's/-/+/g;s/_/\//g' |base64 --decode "$@"
}

unixtime() {
  local unixtime="$1"; shift
  date --iso-8601=ns --date=@$((unixtime))
}
wintime() {
  local wintime="$1"; shift
  date --iso-8601=ns --date=@$(((wintime - 0x019db1ded53e8000)/10000000))
}

if dd status=progress </dev/null >&/dev/null; then
  alias dd='dd status=progress'
fi

alias zsh-unmetafy='perl -pe "s/\\x83(.)/@{[\$1^q( )]}/g"'
#alias zsh-unmetafy='perl -pe "s/\\x83(.)/chr(ord(\$1)^32)/ge"'
alias zsh-metafy='perl -pe "s/[\\0\\x83-\\x9d\\xa0]/\\x83@{[\$&^q( )]}/g"'
#alias zsh-metafy='perl -pe "s/[\\0\\x83-\\x9D\\xA0]/qq(\\x83).chr(ord(\$&)^32)/ge"'

## http://richmegginson.livejournal.com/18726.html (POSIX incompatible?)
#alias ldifunwrap='sed -n '\''1 {h; $ !d}; $ {x; s/\n //g; p}; /^ / {H; d}; /^ /! {x; s/\n //g; p}'\'
alias ldifunwrap='awk '\''NR>1 && !sub(/^ /,"") { print s; s="" } { s = s $0 } END { print s }'\'

alias pickle-dump.py3='python3 -m pickle'
alias telnet.py3='python3 -m telnetlib'
alias httpd.py3='python3 -m http.server'
alias json-pp.py3='python3 -m json.tool'

alias ps-x='ps -eFlyH'
alias ps-u='ps -FHu "$LOGNAME"'

if [[ $UNAME == Linux ]]; then
  alias lsof-x='lsof +E'
fi

alias ss-x='ss -aeiomp'
alias ss-tcp='ss -ateiomp'
alias ss-udp='ss -auemp'
alias iostat-x="iostat -xytcz -p ALL"
alias pstree-x='pstree -acpu'
alias dstat-full='dstat --time --load --cpu --top-cpu --mem --top-mem --io --top-io --disk --net'
alias dstat-mem='dstat --time --load --cpu --top-cpu --mem --top-mem'
alias dstat-cpu='dstat --time --load --cpu --top-cpu --io --top-io'
alias dstat-net='dstat --time --load --cpu --top-cpu --net --top-io'
alias dstat-disk='dstat --time --load --cpu --top-cpu --load --disk --top-io'

alias dig-x='dig +qr +multiline'

alias rsync-compress="rsync --compress --skip-compress='7z/ace/avi/bz2/deb/gpg/gz/iso/jpeg/jpg/lz/lzma/lzo/mov/mp3/mp4/ogg/png/rar/rpm/rzip/tbz/tgz/tlz/txz/xz/z/zip/docx/xlsx/pptx/od[tspg]'"

alias skype-web='mkdir -p -m 0755 $HOME/.local/share/skypeweb && start env GDK_BACKEND=x11 chromium --user-data-dir=$HOME/.local/share/skypeweb https://web.skype.com'

alias firefox='firefox --new-tab'

alias wcp='wget -m -l3 --no-parent'
alias wimg='wget -rH -nd -l 0 -A jpg,jpeg,gif,png --follow-tags=a'

alias curl-x='curl --remote-name --location --show-error --remote-header-name --xattr'
alias curl-v='curl --write-out @<(
  echo -E "url_effective\t\t%{url_effective}\n"
  echo -E "http_version\t\t%{http_version}\n"
  echo -E "http_code\t\t%{http_code}\n"
  echo -E "http_connect\t\t%{http_connect}\n"
  echo -E "ssl_verify_result\t%{ssl_verify_result}\n"
  echo -E "content_type\t\t%{content_type}\n"
  echo -E "filename_effective\t%{filename_effective}\n"
  echo -E "redirect_url\t\t%{redirect_url}\n"
  echo -E "num_redirects\t\t%{num_redirects}\n"
  echo -E "time_total\t\t%{time_total}\n"
  echo -E "time_namelookup\t\t%{time_namelookup}\n"
  echo -E "time_connect\t\t%{time_connect}\n"
  echo -E "time_appconnect\t\t%{time_appconnect}\n"
  echo -E "time_pretransfer\t%{time_pretransfer}\n"
  echo -E "time_redirect\t\t%{time_redirect}\n"
  echo -E "time_starttransfer\t%{time_starttransfer}\n"
  echo -E "size_download\t\t%{size_download}\n"
  echo -E "size_upload\t\t%{size_upload}\n"
  echo -E "size_header\t\t%{size_header}\n"
  echo -E "size_request\t\t%{size_request}\n"
  echo -E "speed_download\t\t%{speed_download}\n"
  echo -E "speed_upload\t\t%{speed_upload}\n"
)'

alias whois-jp='whois -h whois.jprs.jp'
whois-jp-en() {
  whois -h whois.jprs.jp ${1+"$1/e"}
}

if type ncal >&/dev/null; then
  cal() {
    if [ $# -eq 0 ]; then
      ncal -3 -b -M
    else
      command cal ${1+"$@"}
    fi
  }
else
  cal() {
    if [ $# -eq 0 ]; then
      command cal -3 -m
    else
      command cal ${1+"$@"}
    fi
  }
fi

ssh()
{
  local arg

  if [ -t 0 ] && [ -t 1 ]; then
    case "$TERM" in
    *term*|*vt*)
      for arg in ${1+"$@"}; do
        case "$arg" in
        -*)
          ;;
        *)
	  printf '\e]2;ssh %s (%s:%s)\a' "$arg" "$(hostname)" "${TTY#/dev/}"
          break
          ;;
        esac
      done
    esac
  fi

  command ssh ${1+"$@"}
}

nmap-ssl-enum-ciphers() {
  if [[ $# -lt 1 ]]; then
    echo "Usage: nmap-ssl-enum-ciphers HOST[:PORT] [NMAP OPTIONS ...]"
    return 1
  fi
  local host="$1"; shift
  local port_range='443'
  if [[ $host == *:* ]]; then
    port_range="${host#*:}"
    host="${host%%:*}"
  fi

  nmap --script ssl-enum-ciphers -p "$port_range" "$@" "$host"
}

alias telnet-unix='nc.openbsd -U'
alias telnet.py='python -m telnetlib'
## UNIX crypt(1) emulation by mcrypt(1)
alias crypt='mcrypt -a enigma --keymode scrypt --bare'

alias cls='ls --color=always --classify'
alias cgrep='grep --color=always'
alias cegrep='egrep --color=always'
## Depend on GNU grep
alias grep-r='egrep --recursive --binary-files=without-match'
alias grep-R='egrep --dereference-recursive --binary-files=without-match'

alias ra='. $HOME/.profile'

alias xclip-c='xclip -selection clipboard'
## OSC 52 (PASTE64) を利用した端末エミュレータ経由でのクリップボード書き込み
## https://gist.github.com/ttdoda/6c30de9a5f2112e72486
alias tclip="echo -ne '\e]52;0;'; base64 | tr -d '\012'; echo -ne '\e\\'"
alias xo='xdg-open'
alias acroread='command acroread -openInNewWindow'

alias isoinfo-x='isoinfo -lR -i'
type genisoimage >/dev/null 2>&1 && mkisofs="genisoimage" || mkisofs="mkisofs"
alias mkisofs-x="env TZ=UTC $mkisofs -r -J -iso-level 1 -input-charset UTF-8"
unset mkisofs
type wodim >/dev/null 2>&1 && cdrecord="wodim" || cdrecord="cdrecord"
alias cdrecord-x="$cdrecord -v"
alias cdrw-blank="$cdrecord -v blank=fast"
alias cdrw-blank-slow="$cdrecord -v blank=all"
unset cdrecord

alias strace-x='strace -fttTCxyyv'
alias ltrace-x='ltrace -fttTCS'
alias truss-sol-x='truss -aedlDE -v all'
alias truss-sol-xa='truss -aedlDE -v all -r all -w all'
alias truss-sol-xt='truss -aedlDE -v all'
alias truss-sol-xat='truss -aedlDE -v all -r all -w all'
alias truss-aix-x='truss -aedlD'
## `parttypename` and `fsver` are supported by util-linux 2.35+
alias lsblk-x='lsblk --all --ascii --output parttypename,name,kname,type,vendor,model,fstype,fsver,size,sched,uuid,ro,mountpoint'
alias gcc-macros='gcc -E -dM - </dev/null'
alias gcc-x='gcc -O2 -march=native -pipe -fomit-frame-pointer -flto'
alias gcc-Wall='gcc -Wall -Wextra -Wno-unused-parameter -Wno-sign-compare -Wno-pointer-sign -Wno-missing-field-initializers -Wformat=2 -Wstrict-aliasing=2 -Wdisabled-optimization -Wfloat-equal -Wpointer-arith -Wdeclaration-after-statement -Wbad-function-cast -Wcast-align -Wredundant-decls -Winline'
alias disasm='objdump -CSlw -M intel'
alias valgrind-x='valgrind -v --leak-check=full --show-reachable=yes'

java-x() {
  typeset -a args

  args=(
    -server
    -Xms8g
    -Xmx8g
    -XX:-UseGCOverheadLimit
    -XX:+UseConcMarkSweepGC
    -XX:+UseCompressedOops
    -XX:CMSInitiatingOccupancyFraction=70
    -XX:+UseCMSInitiatingOccupancyOnly
    -XX:NewRatio=1
    -XX:SurvivorRatio=2
    -XX:MaxTenuringThreshold=15
    -XX:TargetSurvivorRatio=80
    -XX:SoftRefLRUPolicyMSPerMB=200
    -Djava.security.egd=file:/dev/./urandom
    ## GC log
    -Xloggc:/var/log/java/gc.log
    -XX:+UseGCLogFileRotation
    -XX:NumberOfGCLogFiles=9
    -XX:GCLogFileSize=10000000
    ## Head dump
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:HeapDumpPath=/var/log/java/heapdump/
    ## Profiler
    #-agentlib:hprof=help
    ## Character encoding name mapping
    #-Dsun.nio.cs.map=x-windows-iso2022jp/ISO-2022-JP
  )

  java "${args[@]}" "$@"
}

java-default() {
  typeset java=java
  if [[ -n ${1+set} && ${1##*/} == java* ]]; then
    java="$1"
    shift
  fi

  typeset -a args
  args=(
    -XX:+PrintFlagsFinal
    -XX:+UnlockDiagnosticVMOptions
    #-XX:+UnlockExperimentalVMOptions
  )

  "$java" "${args[@]}" "$@" -version 2>&1
}

alias perl-utf8='perl -Mutf8 -Mopen=:utf8 -Mopen=:std'

## 日本語UTF8文字列を禁則処理付きfoldで折りたたむ方法
## https://kanasys.com/tech/788
jfold() { AC=$# AG=$1 perl -CS -ne 'use utf8;BEGIN{if($ENV{"AC"}>0){$f=$ENV{"AG"}}else{$f=80};$f*=2;}@b=split(//,$_);$i=0;while($c=shift(@b)){print $c;$i++;if(!($c=~/\p{ascii}/)){$i++;}if(($i>=($f-1) && !($b[0]=~/[,\)\]）｝、〕〉》」』】〙〗〟ゝゞーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖ‐゠–〜～\?!‼⁇⁈⁉・:;\/ㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇷ゚ㇺㇻㇼㇽㇾㇿ々〻’”｠»。.]/))||($b[0]=~/[（\([｛〔〈《「『【〘〖〝‘“｟«]/&&$i>=($f-3))){print "\n";$i=0;}}'; }

for a in grep egrep fgrep; do
  type "g$a" >/dev/null 2>&1 && c="g$a" || c="$a"
  if [[ -z $("$c" --directories=skip . / 2>&1 >/dev/null) ]]; then
    alias "$a"="$c --directories=skip"
  else
    [[ $a != "$c" ]] && alias "$a"="$c"
  fi
done
for a in diff; do
  type "g$a" >/dev/null 2>&1 && c="g$a" || c="$a"
  alias "$a"="env LC_MESSAGES=C $c"
done

unalias diff-highlight 2>/dev/null
if type diff-highlight >/dev/null 2>&1; then
  : OK
elif type colordiff >/dev/null 2>&1; then
  alias diff-highlight=colordiff
else
  alias diff-highlight=colordiff
  colordiff()
  {
    {
      if [ -z "${1-}" ]; then
	cat
      else
	LC_ALL=C diff "$@"
      fi
    } \
    |sed -e '/^--- /n;s/^[+>]/\x1b\[32m+/;s/^[-<]/\x1b[31m-/;s/$/\x1b[0m/'
  }
fi

make() {
  if type gmake >/dev/null; then
    LC_MESSAGES=C gmake "$@"
  else
    LC_MESSAGES=C command make "$@"
  fi
}

alias rbenv='env RUBY_CONFIGURE_OPTS="--enable-load-relative" rbenv'

if type vim >/dev/null 2>&1; then
  alias vi='vim'
  alias vidos='env VIM_FILEFORMATS=dos vim'
  alias vimac='env VIM_FILEFORMATS=mac vim'
fi

alias git-reset-add="git rm --cached"
alias git-reset-commit="git reset HEAD\^"
alias git-log='git log --graph --decorate --oneline'

git-diff-reflog() {
  git diff "@{${1-1}}"
}

git-patch() {
  if [ $# -eq 0 ]; then
    git format-patch --stdout "HEAD~"
  elif [ $# -eq 1 ]; then
    git format-patch --stdout "$1~..$1"
  else
    git format-patch --stdout "$1~..$2"
  fi
}

git-patch-mail() {
  if [ $# -eq 0 ]; then
    git format-patch --attach --stdout "HEAD~"
  elif [ $# -eq 1 ]; then
    git format-patch --attach --stdout "$1~..$1"
  else
    git format-patch --attach --stdout "$1~..$2"
  fi
}

#type lv >/dev/null 2>&1 || { type less >/dev/null 2>&1 && alias lv='less'; }

if [ -f "$HOME/lib/vim/plugin/less.vim" ]; then
  function lvv {
    if [ $# -eq 0 ]; then
      vim --cmd 'let no_plugin_maps = 1' -c 'source $HOME/lib/vim/plugin/less.vim' -
    else
      vim --cmd 'let no_plugin_maps = 1' -c 'source $HOME/lib/vim/plugin/less.vim' "$@"
    fi
  }
elif (echo /usr/share/vim/vim*/macros/less.sh) >/dev/null 2>&1; then
  alias lvv="$(ls /usr/share/vim/vim*/macros/less.sh |tail -n -1)"
fi

termconv()
{
  if [ -t 0 ] && [ -t 1 ]; then
    :
  else
    shift
    "$@"
    return $?
  fi

  proc_code="$1"; shift
  proc_code_n="$(echo "$proc_code" |sed 's/[-_]//g' |tr A-Z a-z)"

  if [ x"${LANG:-C}" = x"C" ]; then
    term_code="utf-8"
  else
    term_code="$(echo "$LANG" |sed 's/^.*\.//')"
  fi
  term_code_n="$(echo "$term_code" |sed 's/[-_]//g' |tr A-Z a-z)"

  if [ x"$proc_code_n" != x"$term_code_n" ]; then
    cocot -t "$term_code" -p "$proc_code" -- "$@"
  else
    "$@"
  fi
}

crontab()
{
  if [ x"${1-}" = x"-r" ]; then
    echo -n "crontab: really delete $USER's crontab? (y/n) "
    typeset answer
    while :; do
      read answer
      [ x"$answer" = x"y" ] && break
      [ x"$answer" = x"n" ] && return 0
      echo -n "Please enter Y or N: "
    done
  fi
  command crontab ${1+"$@"}
}

## Convert office documents into CSV format in UTF-8 encoding
alias unoconv-csv='unoconv -i ,,76 -f csv'

## NOTE: Some man(1) command does not see LC_ALL. :-(
alias mane='LC_ALL=C LANG=C man'

alias mans10='MANPATH=/srv/os/solaris-10/usr/share/man man'
alias mans10e='LC_ALL=C LANG=C MANPATH=/srv/os/solaris-10/usr/share/man man'
alias mans11='MANPATH=/srv/os/solaris-11/usr/share/man man'
alias mans11e='LC_ALL=C LANG=C MANPATH=/srv/os/solaris-11/usr/share/man man'
alias manc5='MANPATH=/srv/os/centos-5/usr/share/man man'
alias manc5e='LC_ALL=C LANG=C MANPATH=/srv/os/centos-5/usr/share/man man'
alias mana5='MANPATH=/srv/os/aix-5/usr/share/man man'
alias mana5e='LC_ALL=C LANG=C MANPATH=/srv/os/aix-5/usr/share/man man'
alias mana6='MANPATH=/srv/os/aix-6/usr/share/man man'
alias mana6e='LC_ALL=C LANG=C MANPATH=/srv/os/aix-6/usr/share/man man'
alias mana7='MANPATH=/srv/os/aix-7/usr/share/man man'
alias mana7e='LC_ALL=C LANG=C MANPATH=/srv/os/aix-7/usr/share/man man'
alias manf9='MANPATH=/srv/os/freebsd-9/usr/share/man man'
alias manf9e='LC_ALL=C LANG=C MANPATH=/srv/os/freebsd-9/usr/share/man man'
alias manf8='MANPATH=/srv/os/freebsd-8/usr/share/man man'
alias manf8e='LC_ALL=C LANG=C MANPATH=/srv/os/freebsd-8/usr/share/man man'

mancat()
{
  if type roff2text >/dev/null 2>&1; then
    roff2text -K UTF-8 -T UTF-8 "$@" |"$PAGER"
  elif [ -f /etc/debian_version ]; then
    ## See also: groff(1) and grotty(1)
    nroff -man -- -K UTF-8  -T UTF-8 "$@" |"$PAGER"
  else
    nroff -man "$@" |"$PAGER"
  fi
}

#shar -macDB --no-i18n -n ... -o ...

rpm-qq()
{
  rpm -q --qf "$(rpm --querytags |sort |sed 's/^\(.*\)$/\1: %{\1}/')\n" "$@" \
  |egrep -v '^HEADER|: $|: \(none\)$'
}

rpm-dump()
{
  [ -n "$1" ] || { echo "Usage: rpm-dump NAME.rpm"; return 1; }
  rpm2cpio "$1" | (
    [ -n "$2" ] || cd "$2" || exit 1
    cpio -id
  )
}

apt-upgrade-pkg-with-depends() {
  sudo /usr/bin/apt install \
    "$@" \
    $(
      /usr/bin/apt-rdepends --state-follow=Installed --state-show=Installed "$@" \
      |awk '/Depends:/{print $2}' \
      |sort -u \
      ;
    ) \
  ;
}

alias swaks-spfchecker1='swaks --to check-auth@verifier.port25.com'
alias swaks-spfchecker2='swaks --to spf-test@openspf.net'

alias mysqldump-all-bare='mysqldump --all-databases --events --hex-blob --default-character-set=binary'
alias mysqldump-all='mysqldump-all-bare --single-transaction'
alias mysqldump-all-master='mysqldump-all --master-data=2'
alias mysqldump-all-lock='mysqldump-all-bare --lock-all-tables'

openssl-selfcert()
{
  if [[ -z $1 ]]; then
    echo "Usage: openssl_selfcert CN [DAYS]" 1>&2
    return
  fi
  (
    umask 0027
    openssl \
      req \
      -new \
      -x509 \
      -nodes \
      -subj "/CN=$1" \
      -days "${2-3650}" \
      -out "$1.crt" \
      -keyout "$1.key" \
    ;
  )
}

alias ansible-lint='env PYTHONPATH="$PYTHONPATH:$HOME/git/ansible-lint/lib" "$HOME/git/ansible-lint/bin/ansible-lint"'
alias ansible-lint-x='ansible-lint -r "$HOME/git/ansible-lint-rules/rules"'

## Volume and Backlight adjustment
## ======================================================================

alias vstop='pactl suspend-sink 0 1'
alias vcont='pactl suspend-sink 0 0'
#alias vstop='amixer sset Master mute; pkill -STOP pulseaudio'
#alias vcont='pkill -CONT pulseaudio; amixer sset Master unmute'
alias vmute='amixer sset Master mute'
alias vunmute='amixer sset Master unmute'

if type amixer >/dev/null 2>&1; then
  for n in 0 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100; do
    alias "v$n"="amixer sset Master $n%"
  done
fi

if type xbacklight >/dev/null 2>&1; then
  for n in 0 1 2 3 4 5 10 15 20 25 30 35 40 45 50 55 60 65 70 75 80 85 90 95 100; do
    [ $n -lt 1 ] && v="1" || v="$n"
    alias "$n"="xbacklight -set $v"
    alias "b$n"="xbacklight -set $v"
  done
fi

## GNU compatibility
## ======================================================================

## GNU xargs --no-run-if-empty (-r)
function xargs-r
{
  xargs sh -c '[ \$# -le 1 ] || exec \"\$@\"' -
}

